W22S15
W27S18

// claimer spawn
Game.spawns['Spawn1_W18S15'].spawnCreep([MOVE, CLAIM], 'Claimer' + Game.time, {memory: {role: 'claimer', status: 1, targetRoom: 'W22S15', claim: true}});

//builder2
Game.spawns['Spawn1_W15S13'].spawnCreep([...new Array(16).fill(WORK), ...new Array(16).fill(CARRY), ...new Array(16).fill(MOVE)], 'builder2' + Game.time, {memory: {role: 'builder2', status: 1, targetRoom: 'W15S13'}});

// upgrader2
Game.spawns['Spawn1_W18S15'].spawnCreep([...new Array(16).fill(WORK), ...new Array(16).fill(CARRY), ...new Array(16).fill(MOVE)], 'upgrader2' + Game.time, {memory: {role: 'upgrader2', status: 1, targetRoom: 'W22S15', base: 'W22S15'}});

// carrier spawn
Game.spawns['Spawn2_W18S15'].spawnCreep([...new Array(4).fill(CARRY), ...new Array(2).fill(MOVE)], 'Carrier' + Game.time, {memory: {role: 'carrier'}});

// transporter spawn
Game.spawns['Spawn2'].spawnCreep([...new Array(25).fill(CARRY), ...new Array(25).fill(MOVE)], 'transporter' + Game.time, {memory: {role: 'transporter', base: 'W22S15', targetRoom: 'W19S17'}});

// defender
Game.spawns['Spawn2_W13S21'].spawnCreep([MOVE, MOVE, MOVE, MOVE, MOVE, ATTACK, ATTACK, ATTACK, ATTACK, ATTACK, RANGED_ATTACK, MOVE], 'defender' + Game.time, {memory: {role: 'defender', targetRoom: 'W22S15'}});


Game.spawns['Spawn1_W18S15'].spawnCreep([WORK, WORK, MOVE], 'Harvester2' + Game.time, {memory: {role: 'harvester2', status: 1, target: 0}});
[WORK, WORK, MOVE]

_.forEach(_.filter(Game.rooms['W18S15'].find(FIND_STRUCTURES), structure => structure.structureType == STRUCTURE_TOWER), function(object) {
    object.destroy();
});

// if no tasks
if (roomInfo[creep.room.name]) {
    creep.moveTo(roomInfo[creep.room.name].restPos);
    return;
}

// destroy all the walls
let wallList = Game.rooms.W22S15.find(FIND_STRUCTURES, {filter: struct => struct.structureType == STRUCTURE_WALL});
for(let i in wallList) {
    wallList[i].destroy();
}

// wrecker spawn
Game.spawns['Spawn1'].spawnCreep([WORK, WORK, WORK, WORK, WORK, MOVE, MOVE, MOVE, MOVE, MOVE], 'wrecker' + Game.time, {memory: {role: 'wrecker', targetRoom: 'W21S15', target: '63dbf3057bc7d9c61fb347ce'}});
// scout spawn
Game.spawns['Spawn1_W21S19'].spawnCreep([MOVE], 'scout' + Game.time, {memory: {role: 'scout', targetRoom: 'W22S18'}});


outSourceRooms = {
    W17S15: {
        base: 'W18S15',
        sourceNum: 1,
    },
    W17S14: {
        base: 'W18S15',
        sourceNum: 2,
    }

}


// outSource logic: if in range 3 find hostile creep, move back home
// 20:MOVE, 20: ATTACK
// 10:HEAL, 10: MOVE

// destroy structures
_.forEach(
    _.filter(Game.rooms['roomName'].find(FIND_STRUCTURES), struct => struct.structureType == STRUCTURE_EXTENSION), 
    function(wall){
        console.log(wall);
        wall.destroy();
    }
);

[].

JSON.stringify(obj)

// create task
Game.rooms['W19S17'].memory.managerTasks.push({from: STRUCTURE_TERMINAL, to: STRUCTURE_STORAGE, resourceType: 'K', volume: 10000});
Game.rooms['W22S15'].memory.managerTasks.push({from: STRUCTURE_STORAGE, to: STRUCTURE_TERMINAL, resourceType: 'K', volume: 10000});
// orders
Game.rooms['W18S15'].terminal.send(RESOURCE_ENERGY, 45000, 'W19S17', 'energy');
Game.rooms['W22S15'].terminal.send('K', 10000, 'W19S17', 'K');

Game.market.deal('64462905086f78174a0d6801', 10000, "W19S17");

Game.market.cancelOrder('644046f346d8195c5404a845');

Game.market.createOrder({
    type: ORDER_BUY,
    resourceType: RESOURCE_ENERGY,
    price: 8.6,
    totalAmount: 800000,
    roomName: "W12S21"   
});

// create reaction task
Game.rooms.W19S17.memory.tasks.labTasks.push({resourceType: RESOURCE_HYDROXIDE, amount: 2000});


/*
Todo list:

Best safe mode open time

Mineral mining
- miner creep
- mineral carrier creep

Lab logic

Remote sourcing
- harvester
- carrier
- knight (pertect & heal others)

Queues
1. creepGenerationQueue
- eventCreepQueue
- otherCreepGenerationQueue

Optimizing code
- minimizing room maintain cost
- maximizing out source resources
- optimizing defending algos

Scouting
- scout
- how to pertect it self
- keep memory of dangerous zone
- keep memory the killed scouts (where, creep, owner)

2. repairQueue(for tower)
3. 

*/

// {
//     "path":[
//         {"x":36,"y":17,"roomName":"W18S15"},
//         {"x":37,"y":17,"roomName":"W18S15"},
//         {"x":38,"y":16,"roomName":"W18S15"},
//         {"x":39,"y":15,"roomName":"W18S15"},
//         {"x":40,"y":14,"roomName":"W18S15"},
//         {"x":41,"y":13,"roomName":"W18S15"},
//         {"x":42,"y":13,"roomName":"W18S15"},
//         {"x":43,"y":12,"roomName":"W18S15"},
//         {"x":44,"y":11,"roomName":"W18S15"},
//         {"x":45,"y":11,"roomName":"W18S15"},
//         {"x":46,"y":11,"roomName":"W18S15"},
//         {"x":47,"y":11,"roomName":"W18S15"},
//         {"x":48,"y":12,"roomName":"W18S15"},
//         {"x":49,"y":13,"roomName":"W18S15"},
//         {"x":0,"y":13,"roomName":"W17S15"},
//         {"x":1,"y":14,"roomName":"W17S15"},
//         {"x":1,"y":15,"roomName":"W17S15"},
//         {"x":1,"y":16,"roomName":"W17S15"},
//         {"x":1,"y":17,"roomName":"W17S15"},
//         {"x":1,"y":18,"roomName":"W17S15"},
//         {"x":2,"y":19,"roomName":"W17S15"},
//         {"x":3,"y":20,"roomName":"W17S15"},
//         {"x":4,"y":21,"roomName":"W17S15"},
//         {"x":5,"y":21,"roomName":"W17S15"},
//         {"x":6,"y":20,"roomName":"W17S15"},
//         {"x":7,"y":19,"roomName":"W17S15"},
//         {"x":8,"y":18,"roomName":"W17S15"},
//         {"x":9,"y":17,"roomName":"W17S15"},
//         {"x":10,"y":16,"roomName":"W17S15"},
//         {"x":11,"y":15,"roomName":"W17S15"},
//         {"x":12,"y":15,"roomName":"W17S15"},
//         {"x":13,"y":15,"roomName":"W17S15"},
//         {"x":14,"y":15,"roomName":"W17S15"},
//         {"x":15,"y":15,"roomName":"W17S15"},
//         {"x":16,"y":15,"roomName":"W17S15"},
//         {"x":17,"y":15,"roomName":"W17S15"},
//         {"x":18,"y":15,"roomName":"W17S15"},
//         {"x":19,"y":15,"roomName":"W17S15"},
//         {"x":20,"y":15,"roomName":"W17S15"},
//         {"x":21,"y":15,"roomName":"W17S15"},
//         {"x":22,"y":15,"roomName":"W17S15"},
//         {"x":23,"y":15,"roomName":"W17S15"},
//         {"x":24,"y":15,"roomName":"W17S15"},
//         {"x":25,"y":15,"roomName":"W17S15"},
//         {"x":26,"y":15,"roomName":"W17S15"},
//         {"x":27,"y":16,"roomName":"W17S15"},
//         {"x":28,"y":17,"roomName":"W17S15"},
//         {"x":29,"y":18,"roomName":"W17S15"},
//         {"x":30,"y":19,"roomName":"W17S15"},
//         {"x":31,"y":20,"roomName":"W17S15"},
//         {"x":32,"y":19,"roomName":"W17S15"},
//         {"x":33,"y":18,"roomName":"W17S15"},
//         {"x":33,"y":17,"roomName":"W17S15"},
//         {"x":32,"y":16,"roomName":"W17S15"}
//     ],
//     "ops":1388,
//     "cost":118,
//     "incomplete":falseï¼Œ
// }
